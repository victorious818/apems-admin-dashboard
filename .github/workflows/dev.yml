name: dev-deployment 
on:
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Manual trigger'
        default: 'true'
        required: true
  pull_request:
    types:
      - opened
      - synchronize
  push: 
    branches: 
      - dev

jobs:
  Build:
    name: Build
    if: | 
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize'))
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
    
      - name: docker login 
        uses: azure/docker-login@v1
        with: 
          login-server: devapems.azurecr.io
          username: ${{ secrets.APEMS_DEV_ACR_USERNAME }}
          password: ${{ secrets.APEMS_DEV_ACR_PASSWORD }}

      - name: build docker image
        run: |
          docker build . --file Dockerfile --tag devapems.azurecr.io/dev-apems-admin-dashboard:latest
          docker push devapems.azurecr.io/dev-apems-admin-dashboard:latest

  Deploy:
    name: Deploy
    needs: Build
    if: |
      github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Azure Kubernetes set context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.DEV_KUBE_CONFIG }}
          context: afp-dev-cluster
        id: login

        # Deploy to k8s cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1.4
        with:
          manifests: |
            K8s/dev/deployment.yaml
            K8s/dev/ingress.yaml
          images: 'devapems.azurecr.io/dev-apems-admin-dashboard:latest'
          imagepullsecrets: apems-dev
          namespace: apems
          action: deploy

      # restart pods
      - run: | 
          kubectl -n apems rollout restart deployment apems-admin-dashboard
